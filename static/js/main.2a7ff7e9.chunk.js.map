{"version":3,"sources":["Home/Graph.js","Home/Home.js","States.js","StateWise/StateWise.js","DistrictWise/Selection.js","DistrictWise/Graph.js","DistrictWise/DistrictWise.js","About.js","AppComponent.js","loader.svg","Loader.js","App.js","serviceWorker.js","index.js"],"names":["Graph","props","data","margin","left","strokeDasharray","dataKey","scale","domain","type","stroke","Home","React","useEffect","document","title","className","style","backgroundColor","Intl","NumberFormat","format","confirmed","length","active","deceased","recovered","tested","color","height","world","startAngle","endAngle","fill","fillOpacity","states","StateWise","colors","Buttons","setType","right","labelFormatter","stateid","formatter","value","styles","i","push","boxShadow","borderRadius","onClick","Selection","onChange","event","handleChange","target","options","map","entry","default","type1","fill1","type2","fill2","stackId","type3","fill3","DistrictWise","useState","state","setState","setData","districts","setDistricts","district","setDistrict","graphs","setGraphs","districtData","total","vaccinated1","vaccinated2","htmlFor","fontWeight","Object","keys","About","href","rel","AppComponent","titles","exact","activeClassName","to","path","Loader","src","loader","alt","App","setConfirmed","setActive","setDeceased","setRecovered","setTested","ready","setReady","setStates","SetWorld","fetch","then","rawResponse","json","response","cases_time_series","forEach","day","confirm","totalconfirmed","decease","totaldeceased","recover","totalrecovered","date","toString","totalsamplestested","prev","India","parseInt","World","TotalConfirmed","TotalDeaths","TotalRecovered","types","current","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2a7ff7e9.chunk.js","sourcesContent":["import React from 'react'\r\nimport { ResponsiveContainer, LineChart, Line, XAxis, YAxis, Tooltip, CartesianGrid } from 'recharts';\r\n\r\nexport default function Graph(props) {\r\n    return(\r\n        <ResponsiveContainer>\r\n            <LineChart data={props.data} margin={{ left: 20 }}>\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"date\" />\r\n                <YAxis scale={props.scale} domain={props.domain} />\r\n                <Tooltip />\r\n                <Line type=\"monotone\" dataKey={props.dataKey} stroke={props.stroke} />\r\n            </LineChart>\r\n        </ResponsiveContainer>\r\n    )\r\n}","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './Home.css'\r\nimport { ResponsiveContainer, Tooltip, PolarGrid, PolarAngleAxis, RadarChart, PolarRadiusAxis, Radar, Legend } from 'recharts';\r\nimport Graph from './Graph';\r\n\r\nexport default function Home(props) {\r\n\tReact.useEffect(() => {\r\n\t\tdocument.title = \"Covid-19 India Tracker\"\r\n\t}, [])\r\n\treturn(\r\n\t\t<div className=\"container-fluid\">\r\n\t\t\t<div className=\"row text-center\">\r\n\t\t\t\t<div className=\"col-12 col-md-6 col-lg-4 col-xl-2\">\r\n\t\t\t\t\t<div className=\"mx-2 my-4 bg-info cases-types h4 p-4 d-flex align-items-center\">\r\n\t\t\t\t\t\t<span>Covid-19 India Tracker</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-12 col-md-6 col-lg-4 col-xl-2\">\r\n\t\t\t\t\t<div className=\"mx-2 my-4 cases-types h4 p-4 d-flex flex-column justify-content-around\" style ={{ backgroundColor: '#fd7e14' }}>\r\n\t\t\t\t\t\t<span>Confirmed</span>\r\n\t\t\t\t\t\t<span>{new Intl.NumberFormat('en-IN').format(props.confirmed[props.confirmed.length-1].confirmed)}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-12 col-md-6 col-lg-4 col-xl-2\">\r\n\t\t\t\t\t<div className=\"mx-2 my-4 bg-primary cases-types h4 p-4 d-flex flex-column justify-content-around\">\r\n\t\t\t\t\t\t<span>Active</span>\r\n\t\t\t\t\t\t<span>{new Intl.NumberFormat('en-IN').format(props.active[props.active.length-1].active)}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-12 col-md-6 col-lg-4 col-xl-2\">\r\n\t\t\t\t\t<div className=\"mx-2 my-4 bg-danger cases-types h4 p-4 d-flex flex-column justify-content-around\">\r\n\t\t\t\t\t\t<span>Deceased</span>\r\n\t\t\t\t\t\t<span>{new Intl.NumberFormat('en-IN').format(props.deceased[props.deceased.length-1].deceased)}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-12 col-md-6 col-lg-4 col-xl-2\">\r\n\t\t\t\t\t<div className=\"mx-2 my-4 bg-success cases-types h4 p-4 d-flex flex-column justify-content-around\">\r\n\t\t\t\t\t\t<span>Recovered</span>\r\n\t\t\t\t\t\t<span>{new Intl.NumberFormat('en-IN').format(props.recovered[props.recovered.length-1].recovered)}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-12 col-md-6 col-lg-4 col-xl-2\">\r\n\t\t\t\t\t<div className=\"mx-2 my-4 cases-types h4 p-4 d-flex flex-column justify-content-around\" style ={{ backgroundColor: '#6610f2' }}>\r\n\t\t\t\t\t\t<span>Tested</span>\r\n\t\t\t\t\t\t<span>{props.tested}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row text-center\">\r\n\t\t\t\t<div className=\"col-12 col-md-12 col-lg-12 col-xl-8\">\r\n\t\t\t\t\t<div className=\"row text-center\">\r\n\t\t\t\t\t\t<div className=\"col-12 col-md-12 col-lg-6 col-xl-6\">\r\n\t\t\t\t\t\t\t<h4 style={{ color: '#fd7e14' }}>Confirmed</h4>\r\n\t\t\t\t\t\t\t<div className=\"m-2 home-graph\">\r\n\t\t\t\t\t\t\t\t<Graph data={props.confirmed} scale=\"log\" domain={[1, 50000000]} dataKey=\"confirmed\" stroke=\"#fd7e14\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-12 col-md-12 col-lg-6 col-xl-6\">\r\n\t\t\t\t\t\t\t<h4 className=\"text-primary\">Active</h4>\r\n\t\t\t\t\t\t\t<div className=\"my-2 home-graph\">\r\n\t\t\t\t\t\t\t\t<Graph data={props.active} scale=\"auto\" domain={[1, 4000000]} dataKey=\"active\" stroke=\"#007bff\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<div className=\"row text-center\">\r\n\t\t\t\t\t\t<div className=\"col-12 col-md-12 col-lg-6 col-xl-6\">\r\n\t\t\t\t\t\t\t<h4 className=\"text-danger\">Deceased</h4>\r\n\t\t\t\t\t\t\t<div className=\"my-2 home-graph\">\r\n\t\t\t\t\t\t\t\t<Graph data={props.deceased} scale=\"log\" domain={[1, 500000]} dataKey=\"deceased\" stroke=\"#dc3545\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-12 col-md-12 col-lg-6 col-xl-6\">\r\n\t\t\t\t\t\t\t<h4 className=\"text-success\">Recovered</h4>\r\n\t\t\t\t\t\t\t<div className=\"my-2 home-graph\">\r\n\t\t\t\t\t\t\t\t<Graph data={props.recovered} scale=\"log\" domain={[1, 50000000]} dataKey=\"recovered\" stroke=\"#28a745\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-12 col-md-12 col-lg-12 col-xl-4\">\r\n\t\t\t\t\t<div className=\"m-2\" style={{ height: \"60vh\" }}>\r\n\t\t\t\t\t\t<ResponsiveContainer>\r\n\t\t\t\t\t\t\t<RadarChart data={props.world} startAngle={35} endAngle={-325}>\r\n\t\t\t\t\t\t\t\t<PolarGrid />\r\n\t\t\t\t\t\t\t\t<PolarAngleAxis dataKey=\"type\"/>\r\n\t\t\t\t\t\t\t\t<PolarRadiusAxis scale=\"sqrt\" />\r\n\t\t\t\t\t\t\t\t<Radar dataKey=\"World\" stroke=\"purple\" fill=\"#8884d8\" fillOpacity={0.6} />\r\n\t\t\t\t\t\t\t\t<Radar dataKey=\"India\" stroke=\"orange\" fill=\"gold\" fillOpacity={0.6} />\r\n\t\t\t\t\t\t\t\t<Tooltip />\r\n\t\t\t\t\t\t\t\t<Legend />\r\n\t\t\t\t\t\t\t</RadarChart>\r\n\t\t\t\t\t\t</ResponsiveContainer>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","export const states = {\r\n    'AP': 'Andhra Pradesh',\r\n    'AR': 'Arunachal Pradesh',\r\n    'AS': 'Assam',\r\n    'BR': 'Bihar',\r\n    'CT': 'Chhattisgarh',\r\n    'GA': 'Goa',\r\n    'GJ': 'Gujarat',\r\n    'HR': 'Haryana',\r\n    'HP': 'Himachal Pradesh',\r\n    'JH': 'Jharkhand',\r\n    'KA': 'Karnataka',\r\n    'KL': 'Kerala',\r\n    'MP': 'Madhya Pradesh',\r\n    'MH': 'Maharashtra',\r\n    'MN': 'Manipur',\r\n    'ML': 'Meghalaya',\r\n    'MZ': 'Mizoram',\r\n    'NL': 'Nagaland',\r\n    'OR': 'Odisha',\r\n    'PB': 'Punjab',\r\n    'RJ': 'Rajasthan',\r\n    'SK': 'Sikkim',\r\n    'TN': 'Tamil Nadu',\r\n    'TG': 'Telangana',\r\n    'TR': 'Tripura',\r\n    'UT': 'Uttarakhand',\r\n    'UP': 'Uttar Pradesh',\r\n    'WB': 'West Bengal',\r\n    'AN': 'Andaman and Nicobar Islands',\r\n    'CH': 'Chandigarh',\r\n    'DN': 'Dadra and Nagar Haveli',\r\n    'DL': 'Delhi',\r\n    'JK': 'Jammu and Kashmir',\r\n    'LA': 'Ladakh',\r\n    'PY': 'Puducherry' \r\n}","import React from 'react'\r\nimport { BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Bar, ResponsiveContainer } from 'recharts'\r\nimport './StateWise.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { states } from '../States'\r\n\r\nexport default function StateWise(props) {\r\n\tconst colors = [ '#fd7e14', '#007bff', '#dc3545', '#28a745', '#6610f2', '#f8bb04', '#ff69b4' ]\r\n\tReact.useEffect(() => {\r\n\t\tdocument.title = \"State Wise\"\r\n\t}, [])\r\n    return(\r\n        <div style={{ height: \"77vh\" }}>\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<Buttons setType={props.setType} type={props.type} colors={colors} />\r\n\t\t\t</div>\r\n\t\t\t<ResponsiveContainer>\r\n\t\t\t\t<BarChart data={props.states} margin={{ left: 35, right: 20 }} >\r\n\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t\t<XAxis dataKey=\"state\" />\r\n\t\t\t\t\t<YAxis />\r\n\t\t\t\t\t<Tooltip labelFormatter={stateid => states[stateid]} formatter={value => new Intl.NumberFormat('en-IN').format(value)} />\r\n\t\t\t\t\t<Bar dataKey={['confirmed', 'active', 'deceased', 'recovered', 'tested', 'vaccinated1', 'vaccinated2'][props.type]} fill={colors[props.type]} />\r\n\t\t\t\t</BarChart>\r\n\t\t\t</ResponsiveContainer>\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nfunction Buttons(props) {\r\n\tlet styles = []\r\n\tfor(let i=0;i<7;++i) {\r\n\t\tstyles.push({\r\n\t\t\tbackgroundColor: props.colors[i] + (props.type === i ? '67' : '44'),\r\n\t\t\tcolor: props.colors[i] + (props.type === i ? '' : 'aa'),\r\n\t\t\tboxShadow: '0 0 ' + (props.type === i ? 6 : 0) + 'px ' + (props.type === i ? 3 : 0) + 'px ' + props.colors[i]\r\n\t\t})\r\n\t}\r\n\treturn(\r\n\t\t<div className=\"row my-3 text-center\" style={{ backgroundColor: 'whitesmoke', borderRadius: 14 }}>\r\n\t\t\t<div className=\"col-md\">\r\n\t\t\t\t<div className=\"cases-type p-2 my-3\" style={styles[0]} onClick={() => props.setType(0)}>Confirmed</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"col-md\">\r\n\t\t\t\t<div className=\"cases-type p-2 my-3\" style={styles[1]} onClick={() => props.setType(1)}>Active</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"col-md\">\r\n\t\t\t\t<div className=\"cases-type p-2 my-3\" style={styles[2]} onClick={() => props.setType(2)}>Deceased</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"col-md\">\r\n\t\t\t\t<div className=\"cases-type p-2 my-3\" style={styles[3]} onClick={() => props.setType(3)}>Recovered</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"col-md\">\r\n\t\t\t\t<div className=\"cases-type p-2 my-3\" style={styles[4]} onClick={() => props.setType(4)}>Tested</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"col-md\">\r\n\t\t\t\t<div className=\"cases-type p-2 my-3\" style={styles[5]} onClick={() => props.setType(5)}>1 Dose</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"col-md\">\r\n\t\t\t\t<div className=\"cases-type p-2 my-3\" style={styles[6]} onClick={() => props.setType(6)}>2 Doses</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\r\nimport { states } from '../States'\r\n\r\nexport default function Selection(props) {\r\n    const handleChange = (event) => {\r\n        props.handleChange(event.target.value)\r\n    }\r\n    return (\r\n        <select className=\"form-select\" onChange={handleChange} value={props.value} >\r\n            <option value=''>Select</option>\r\n            {props.options.map((entry, i) => <option key={i} value={entry}>{props.default === 'State' ? states[entry] : entry}</option>)}\r\n        </select>\r\n    )\r\n}","import React from 'react'\r\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid } from 'recharts'\r\n\r\nexport default function Graph(props) {\r\n    return(\r\n        <ResponsiveContainer>\r\n            <BarChart data={props.data} margin={{ left: 20 }}>\r\n                <XAxis dataKey=\"district\" />\r\n                <YAxis scale=\"sqrt\" />\r\n                <CartesianGrid />\r\n                <Tooltip />\r\n                <Bar dataKey={props.type1} fill={props.fill1} />\r\n                <Bar dataKey={props.type2} fill={props.fill2} stackId=\"vaccinated\" />\r\n                {props.type3 ? <Bar dataKey={props.type3} fill={props.fill3} stackId=\"vaccinated\" /> : null}\r\n            </BarChart>\r\n        </ResponsiveContainer>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Selection from './Selection'\r\nimport Graph from './Graph'\r\nimport './DistrictWise.css'\r\n\r\nexport default function DistrictWise(props) {\r\n\tconst [ state, setState ] = useState()\r\n\tconst [ data, setData ] = useState([])\r\n\tconst [ districts, setDistricts ] = useState([])\r\n\tconst [ district, setDistrict] = useState('')\r\n\tconst [ graphs, setGraphs ] = useState()\r\n\tuseEffect(() => {\r\n\t\tdocument.title = \"District Wise\"\r\n\t}, [])\r\n\tuseEffect(() => {\r\n\t\tif(state) {\r\n\t\t\tconst districtData = props.districts[state]\r\n\t\t\tlet graphs = [[], [], []]\r\n\t\t\tsetDistricts(districtData)\r\n\t\t\tfor(const district in districtData) {\r\n\t\t\t\tconst confirmed = districtData[district].total.confirmed || 0\r\n\t\t\t\tconst deceased = districtData[district].total.deceased || 0\r\n\t\t\t\tconst recovered = districtData[district].total.recovered || 0\r\n\t\t\t\tconst tested = districtData[district].total.tested || 0\r\n\t\t\t\tconst vaccinated1 = districtData[district].total.vaccinated1 || 0\r\n\t\t\t\tconst vaccinated2 = districtData[district].total.vaccinated2 || 0\r\n\t\t\t\tgraphs[0].push({ district: district, confirmed: confirmed, active: (confirmed - deceased - recovered) })\r\n\t\t\t\tgraphs[1].push({ district: district, deceased: deceased, recovered: recovered })\r\n\t\t\t\tgraphs[2].push({ district: district, tested: tested, \"1 dose\": vaccinated1, \"2 doses\": vaccinated2 })\r\n\t\t\t}\r\n\t\t\tsetGraphs(graphs)\r\n\t\t}\r\n\t\tsetDistrict('')\r\n\t}, [props.districts, state])\r\n\tuseEffect(() => {\r\n\t\tif(district) {\r\n\t\t\tlet data = []\r\n\t\t\tconst confirmed = districts[district].total.confirmed || 0\r\n\t\t\tconst deceased = districts[district].total.deceased || 0\r\n\t\t\tconst recovered = districts[district].total.recovered || 0\r\n\t\t\tconst tested = districts[district].total.tested || 0\r\n\t\t\tconst vaccinated1 = districts[district].total.vaccinated1 || 0\r\n\t\t\tconst vaccinated2 = districts[district].total.vaccinated2 || 0\r\n\t\t\tdata.push({ type: 'Confirmed', value: confirmed })\r\n\t\t\tdata.push({ type: 'Active', value: (confirmed - deceased - recovered) })\r\n\t\t\tdata.push({ type: 'Deceased', value: deceased })\r\n\t\t\tdata.push({ type: 'Recovered', value: recovered })\r\n\t\t\tdata.push({ type: 'Tested', value: tested })\r\n\t\t\tdata.push({ type: 'vaccinated1', value: vaccinated1 })\r\n\t\t\tdata.push({ type: 'vaccinated2', value: vaccinated2 })\r\n\t\t\tsetData(data)\r\n\t\t}\r\n\t}, [district, districts])\r\n\treturn(\r\n\t\t<div className=\"container-fluid\">\r\n\t\t\t<div className=\"row text-center\">\r\n\t\t\t\t<div className=\"col-12 col-md-6 col-lg-4 col-xl-2 py-4 d-flex justify-content-around flex-column\">\r\n\t\t\t\t\t<div className=\"input-group\">\r\n\t\t\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t<label className=\"input-group-text\" htmlFor=\"state\" style={{ fontWeight: \"bold\" }}>State: </label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Selection default=\"State\" options={Object.keys(props.districts)} handleChange={setState} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-group\">\r\n\t\t\t\t\t\t<div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t<label className=\"input-group-text\" htmlFor=\"state\" style={{ fontWeight: \"bold\" }}>District: </label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<Selection default=\"District\" options={Object.keys(districts)} value={district} handleChange={setDistrict} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"col-12 col-md-6 col-lg-4 col-xl-10\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-6 col-md-6 col-lg-4 col-xl-2\">\r\n\t\t\t\t\t\t\t<div className=\"mx-2 my-4 cases-types h4 py-4 d-flex flex-column justify-content-around\" style ={{ backgroundColor: '#fd7e14' }}>\r\n\t\t\t\t\t\t\t\t<span>Confirmed</span>\r\n\t\t\t\t\t\t\t\t<span>{data[0] && district ? new Intl.NumberFormat('en-IN').format(data[0]['value']) : '-'}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-6 col-md-6 col-lg-4 col-xl-2\">\r\n\t\t\t\t\t\t\t<div className=\"mx-2 my-4 bg-primary cases-types h4 py-4 d-flex flex-column justify-content-around\">\r\n\t\t\t\t\t\t\t\t<span>Active</span>\r\n\t\t\t\t\t\t\t\t<span>{data[1] && district ? new Intl.NumberFormat('en-IN').format(data[1]['value']) : '-'}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-6 col-md-6 col-lg-4 col-xl-2\">\r\n\t\t\t\t\t\t\t<div className=\"mx-2 my-4 bg-danger cases-types h4 py-4 d-flex flex-column justify-content-around\">\r\n\t\t\t\t\t\t\t\t<span>Deceased</span>\r\n\t\t\t\t\t\t\t\t<span>{data[2] && district ? new Intl.NumberFormat('en-IN').format(data[2]['value']) : '-'}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-6 col-md-6 col-lg-4 col-xl-2\">\r\n\t\t\t\t\t\t\t<div className=\"mx-2 my-4 bg-success cases-types h4 py-4 d-flex flex-column justify-content-around\">\r\n\t\t\t\t\t\t\t\t<span>Recovered</span>\r\n\t\t\t\t\t\t\t\t<span>{data[3] && district ? new Intl.NumberFormat('en-IN').format(data[3]['value']) : '-'}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-6 col-md-6 col-lg-4 col-xl-2\">\r\n\t\t\t\t\t\t\t<div className=\"mx-2 my-4 cases-types h4 py-4 d-flex flex-column justify-content-around\" style={{ backgroundColor: \"#6610f2\" }}>\r\n\t\t\t\t\t\t\t\t<span>Tested</span>\r\n\t\t\t\t\t\t\t\t<span>{data[4] && district ? new Intl.NumberFormat('en-IN').format(data[4]['value']) : '-'}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-6 col-md-6 col-lg-4 col-xl-2\">\r\n\t\t\t\t\t\t\t<div className=\"mx-2 my-4 cases-types h4 py-4 d-flex flex-column justify-content-around\" style={{ backgroundColor: \"#ffc107\" }}>\r\n\t\t\t\t\t\t\t\t<span>Vaccinated</span>\r\n\t\t\t\t\t\t\t\t<span>{data[5] && data[6] && district ? new Intl.NumberFormat('en-IN').format(data[5]['value']+data[6]['value']) : '-'}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{graphs && state ? <div><div className=\"row text-center\">\r\n\t\t\t\t<div className=\"col-12 col-md-12 col-lg-12 col-xl-12\">\r\n\t\t\t\t\t<div className=\"d-flex flex-column\">\r\n\t\t\t\t\t\t<div className=\"my-2 dist-graph\">\r\n\t\t\t\t\t\t\t<Graph data={graphs[0]} type1=\"confirmed\" type2=\"active\" fill1=\"#fd7e14\" fill2=\"#007bff\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"my-2 dist-graph\">\r\n\t\t\t\t\t\t\t<Graph data={graphs[1]} type1=\"recovered\" type2=\"deceased\" fill1=\"#28a745\" fill2=\"#dc3545\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"my-2 dist-graph\">\r\n\t\t\t\t\t\t\t<Graph data={graphs[2]} type1=\"tested\" type2=\"1 dose\" type3=\"2 doses\" fill1=\"#6610f2\" fill2=\"#ffc107\" fill3=\"#ff69b4\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div></div> : null}\r\n\t\t\t\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\r\nimport './About.css'\r\n\r\nexport default function About() {\r\n\treturn(\r\n\t\t<div className=\"about\">\r\n\t\t\t<h1>Covid-19 India Tracker</h1><br />\r\n\t\t\t<h3>Made by <u><i><a href=\"github.com/Athi223\" target=\"_blank\" rel=\"noopener noreferrer\">Athi223</a></i></u></h3><br />\r\n\t\t\t<h5>Credits: \r\n\t\t\t\t<ul className=\"list\">\r\n\t\t\t\t\t<li><u><a href=\"https://api.covid19india.org\" target=\"_blank\" rel=\"noopener noreferrer\">Covid-19 India API</a></u></li>\r\n\t\t\t\t\t<li><u><a href=\"https://covid19api.com\" target=\"_blank\" rel=\"noopener noreferrer\">Covid-19 API</a></u></li>\r\n\t\t\t\t</ul>\r\n\t\t\t</h5>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { BrowserRouter as Router, Switch, Route, NavLink } from \"react-router-dom\"\r\nimport Home from './Home/Home'\r\nimport StateWise from './StateWise/StateWise'\r\nimport DistrictWise from './DistrictWise/DistrictWise'\r\nimport About from './About'\r\n\r\nexport default function AppComponent(props) {\r\n\tconst titles = [ 'Covid-19 India Tracker', 'State Wise', 'District Wise', 'About', ]\r\n\treturn (\r\n\t\t<Router>\r\n\t\t\t<div>\r\n\t\t\t\t<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n\t\t\t\t\t<div className=\"navbar-nav\">\r\n\t\t\t\t\t\t<NavLink exact activeClassName=\"active\" className=\"nav-item nav-link h5\" to=\"/\">{titles[0]}</NavLink>\r\n\t\t\t\t\t\t<NavLink activeClassName=\"active\" className=\"nav-item nav-link h5\" to=\"/statewise\">{titles[1]}</NavLink>\r\n\t\t\t\t\t\t<NavLink activeClassName=\"active\" className=\"nav-item nav-link h5\" to=\"/districtwise\">{titles[2]}</NavLink>\r\n\t\t\t\t\t\t<NavLink activeClassName=\"active\" className=\"nav-item nav-link h5\" to=\"/about\">{titles[3]}</NavLink>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</nav>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path=\"/about\">\r\n\t\t\t\t\t\t<About />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path=\"/districtwise\">\r\n\t\t\t\t\t\t<DistrictWise districts={props.districts} />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path=\"/statewise\">\r\n\t\t\t\t\t\t<StateWise states={props.states[props.type]} type={props.type} setType={props.setType} />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path=\"/\">\r\n\t\t\t\t\t\t<Home\r\n\t\t\t\t\t\t\tconfirmed={props.confirmed}\r\n\t\t\t\t\t\t\tactive={props.active}\r\n\t\t\t\t\t\t\tdeceased={props.deceased}\r\n\t\t\t\t\t\t\trecovered={props.recovered}\r\n\t\t\t\t\t\t\ttested={props.tested}\r\n\t\t\t\t\t\t\tworld={props.world}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t);\r\n}","export default __webpack_public_path__ + \"static/media/loader.2d27ead7.svg\";","import React from 'react'\r\nimport loader from './loader.svg';\r\nimport './Loader.css';\r\n\r\nexport default function Loader() {\r\n\treturn <div className=\"wrapper\"><img src={loader} className=\"loader\" alt=\"loader\" /></div>\r\n}","import React, { useState, useEffect } from 'react';\r\nimport AppComponent from './AppComponent'\r\nimport Loader from './Loader'\r\n\r\nexport default function App() {\r\n\tconst [ confirmed, setConfirmed ] = useState([])\r\n\tconst [ active, setActive ] = useState([])\r\n\tconst [ deceased, setDeceased ] = useState([])\r\n\tconst [ recovered, setRecovered ] = useState([])\r\n\tconst [ tested, setTested ] = useState(0)\r\n\tconst [ ready, setReady ] = useState(0)\r\n\tconst [ type, setType ] = useState(0)\r\n\tconst [ states, setStates ] = useState([])\r\n\tconst [ districts, setDistricts ] = useState({})\r\n\tconst [ world, SetWorld ] = useState([])\r\n\tuseEffect(() => {\r\n\t\tfetch('https://api.covid19india.org/data.json')\r\n\t\t.then(rawResponse => rawResponse.json())\r\n\t\t.then(response => {\r\n\t\t\tlet confirmed = [], active = [], deceased = [], recovered = []\r\n\t\t\tresponse.cases_time_series.forEach(day => {\r\n\t\t\t\tconst confirm = day.totalconfirmed\r\n\t\t\t\tconst decease = day.totaldeceased\r\n\t\t\t\tconst recover = day.totalrecovered\r\n\t\t\t\tconfirmed.push({ date: day.date, confirmed: confirm })\r\n\t\t\t\tactive.push({ date: day.date, active: (confirm - decease - recover).toString() })\r\n\t\t\t\tdeceased.push({ date: day.date, deceased: decease })\r\n\t\t\t\trecovered.push({ date: day.date, recovered: recover })\r\n\t\t\t})\r\n\t\t\tsetConfirmed(confirmed)\r\n\t\t\tsetActive(active)\r\n\t\t\tsetDeceased(deceased)\r\n\t\t\tsetRecovered(recovered)\r\n\t\t\tsetTested(new Intl.NumberFormat('en-IN').format(response.tested[response.tested.length-1].totalsamplestested))\r\n\t\t\tsetReady(prev => prev + 1)\r\n\t\t\tfetch('https://api.covid19api.com/world/total')\r\n\t\t\t.then(rawResponse => rawResponse.json())\r\n\t\t\t.then(response => {\r\n\t\t\t\tconst world = [\r\n\t\t\t\t\t{ type: 'Confirmed', India: parseInt(confirmed[confirmed.length-1].confirmed), World: response.TotalConfirmed },\r\n\t\t\t\t\t{ type: 'Active', India: parseInt(active[active.length-1].active), World: (response.TotalConfirmed - response.TotalDeaths - response.TotalRecovered) },\r\n\t\t\t\t\t{ type: 'Recovered', India: parseInt(recovered[recovered.length-1].recovered), World: response.TotalRecovered },\r\n\t\t\t\t\t{ type: 'Deceased', India: parseInt(deceased[deceased.length-1].deceased), World: response.TotalDeaths },\r\n\t\t\t\t]\r\n\t\t\t\tSetWorld(world)\r\n\t\t\t})\r\n\t\t})\r\n\t\tfetch(\"https://api.covid19india.org/v4/data.json\")\r\n\t\t.then(rawResponse => rawResponse.json())\r\n\t\t.then(response => {\r\n\t\t\tlet states = [[], [], [], [], [], [], []], districts = {}\r\n\t\t\tfor(const stateid in response) {\r\n\t\t\t\tconst total =  response[stateid]['total']\r\n\t\t\t\tconst types = [ 'confirmed', 'active', 'deceased', 'recovered', 'tested', 'vaccinated1', 'vaccinated2' ]\r\n\t\t\t\tconst current = [\r\n\t\t\t\t\ttotal[types[0]] || 0,\r\n\t\t\t\t\t(total[types[0]] || 0) - (total[types[2]] || 0) - (total[types[3]] || 0) - (total['other'] || 0),\r\n\t\t\t\t\ttotal[types[2]] || 0,\r\n\t\t\t\t\ttotal[types[3]] || 0,\r\n\t\t\t\t\ttotal[types[4]] || 0,\r\n\t\t\t\t\ttotal[types[5]] || 0,\r\n\t\t\t\t\ttotal[types[6]] || 0\r\n\t\t\t\t]\r\n\t\t\t\tif(stateid !== 'TT') {\r\n\t\t\t\t\tdistricts[stateid] = response[stateid]['districts']\r\n\t\t\t\t\tfor(let i=0 ;i<current.length; ++i)\r\n\t\t\t\t\t\tstates[i].push({state: stateid, [types[i]]: current[i]})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tsetStates(states)\r\n\t\t\tsetDistricts(districts)\r\n\t\t\tsetReady(prev => prev + 1)\r\n\t\t})\r\n\t}, [])\r\n\tif(ready === 2)\r\n\t\treturn(\r\n\t\t\t<AppComponent\r\n\t\t\t\tconfirmed={confirmed}\r\n\t\t\t\tactive={active}\r\n\t\t\t\tdeceased={deceased}\r\n\t\t\t\trecovered={recovered}\r\n\t\t\t\ttested={tested}\r\n\t\t\t\tstates={states}\r\n\t\t\t\tdistricts={districts}\r\n\t\t\t\ttype={type}\r\n\t\t\t\tworld={world}\r\n\t\t\t\tsetType={setType}\r\n\t\t\t/>\r\n\t\t)\r\n\telse\r\n\t\treturn(<Loader />)\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}